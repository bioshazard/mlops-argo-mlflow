# https://argoproj.github.io/argo-workflows/walk-through/argo-cli/
# https://argoproj.github.io/argo-workflows/walk-through/output-parameters/

apiVersion: argoproj.io/v1alpha1
kind: Workflow                  # new type of k8s spec
metadata:
  generateName: train-model-    # name of the workflow spec
  namespace: argo
spec:
  entrypoint: e2e-train-serve
  templates:

    - name: e2e-train-serve
      steps:
      - - name: train-model
          template: train
      - - name: model-deploy
          template: deploy
          arguments:
            parameters:
              - name: model-uri
                value: "{{steps.train-model.outputs.parameters.model-uri}}"

    - name: train              # name of the template
      volumes:
      - name: gapp-creds-vol
        secret:
          secretName: gapp-creds
          optional: false # default setting; "gapp-creds" must exist
      container:
        name: train-test-job
        image: argo-step:training-conda
        command: ["python", "train.py"]
        resources: {}
        env:
        - name: MLFLOW_TRACKING_URI
          value: http://mlflow:5000
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /code/secrets/gapp_creds.json
        volumeMounts:
        - name: gapp-creds-vol
          mountPath: "/code/secrets"
          readOnly: true
      outputs:
        parameters:
        - name: model-uri
          valueFrom:
            path: /code/model_uri.txt
    
    - name: deploy
      inputs:
        parameters:
        - name: model-uri
      volumes:
      - name: deploy-yaml-vol
        configMap:
          name: mlserve
          optional: false # must exist
      serviceAccountName: deploy-sa
      container:
        name: kubectl
        image: bitnami/kubectl
        command: ['sh', '-c', 'bash /manifests/deploy.sh {{inputs.parameters.model-uri}}']
        resources: {}
        env:
        - name: MLFLOW_TRACKING_URI
          value: http://mlflow:5000
        volumeMounts:
        - name: deploy-yaml-vol
          mountPath: "/manifests"
          readOnly: true




        # command: ['sh', '-c', 'sleep 99999']
        # image: mlflow:ce-assessment-conda
        # command: ["mlflow"]
        # args: ["models", "serve", "-m", "{{inputs.parameters.msg}}", "-p", "1234"]


